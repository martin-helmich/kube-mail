name: Compile & Test
on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  pull_request:
jobs:
  compile:
    name: Compile TypeScript
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
      - run: npm ci
      - run: npm run compile

  test:
    name: Run unit test suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
      - run: npm ci
      - run: npm run test

  helm:
    name: Verify Helm chart
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Lint Helm chart
        run: |
          helm lint ./deploy/helm-chart/kube-mail
      - name: Render Helm chart
        run: |
          helm template test ./deploy/helm-chart/kube-mail > /dev/null

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
      - uses: actions/setup-go@v4
        with:
          go-version: '^1.18'
      - name: install controller-gen
        run: go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.14.0
      - run: npm ci
      - run: make generate
      - name: assert no files are modified
        run: |
          git diff | cat
          git status --porcelain=v1
          test $(git status --porcelain=v1 | wc -l) -eq 0

  integration:
    name: Run integation test suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.14.0"
          wait: "600s"
      - run: npm ci
      - name: Testing
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system

          kind get kubeconfig > ./kind-kubeconfig
      - name: Build and load image
        run: |
          docker build -t kube-mail .
          kind load docker-image kube-mail
      - name: Setup Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Install kube-mail in KinD
        run: |
          helm install --set image.repository=kube-mail --set image.pullPolicy=Never kube-mail ./deploy/helm-chart/kube-mail
      - name: Run tests
        run: |
          POD_NAME=$(kubectl get po -l app.kubernetes.io/name=kube-mail -o=jsonpath='{.items[0].metadata.name}')
          REDIS_POD_NAME=$(kubectl get po -l app.kubernetes.io/name=redis -o=jsonpath='{.items[0].metadata.name}')
          kubectl apply -f tests/integration/setup

          kubectl wait pod/upstream --for=condition=ready
          kubectl wait pod/$POD_NAME --for=condition=ready
          kubectl wait pod/$REDIS_POD_NAME --for=condition=ready --timeout=120s

          kubectl port-forward upstream 8080:8080 &
          kubectl port-forward $POD_NAME 9100:9100 &

          if ! npm run test:integration ; then
            kubectl get pods
            kubectl describe pod $POD_NAME
            kubectl logs $POD_NAME
          
            exit 1
          fi
